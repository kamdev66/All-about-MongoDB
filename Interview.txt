1. Which cursor method should you use to force MongoDB to use a specific index for a query?
:- cursor.hint()
Explanation:--
You can call cursor.hint() method on a query to override MongoDB's default index selection and query optimization process.


2. In which of the following CRUD operations can you specify a write concern? Select all that apply.
:- db.collection.update(),db.collection.updateMany(),db.collection.insertOne(),db.collection.insert()
Explanation:- Write concern describes the level of acknowledgment requested from MongoDB for write operations to a standalone mongod or to replica sets or to sharded clusters. All update and insert operations have write concern option.


3. Given a movies collection where each document has the following structure:
{
    _id: ObjectId("573a1390f29313caabcd60e4"),
    genres: [ 'Short', 'Comedy', 'Drama' ],
    title: 'The Immigrant',
    year: 1917,
    imdb: { rating: 7.8, votes: 4680, id: 8133 },
    countries: [ 'USA' ]
}
Which of the following queries will find all movies that do not contain the Comedy and Romance genres?
:-db.movies.find({genres : {$nin : ["Comedy","Romance"]}})
Explanation:-
$nin selects the documents where:
the field value is not in the specified array or
the field does not exist.
If the field holds an array, then the $nin operator selects the documents whose field holds an array with no element equal to a value in the specified array (for example, <value1>, <value2>, and so on).
Syntax: { field: { $nin: [ <value1>, <value2> ... <valueN> ] } }



4. Select all true statements about text search in MongoDB. 
:- To perform text searches on a collection we use $text operator.
:- To perform text search queries,you must have a text index on your collection.
:- MongoDB provides text indexes to support text search queries on string content.
:- Text indexes can include any field whose value is a string.
Explanation:-
Text indexes cannot include any field whose value is an array of string elements. - FALSE
text indexes can include any field whose value is a string or an array of string elements.
A collection can have multiple text search indexes. - FALSE
A collection can only have one text search index.
$text performs a text search on the content of the fields indexed with a text index. A $text expression has the following syntax:
{
  $text:
    {
      $search: <string>,
      $language: <string>,
      $caseSensitive: <boolean>,
      $diacriticSensitive: <boolean>
    }
}


5. Suppose you have a developers collection with the following document structure:
{
  _id: 1,
  fname: 'Bob',
  lname: 'Smith',
  tech_stack: [ 'git', 'c++', 'sqlite', 'linux' ]
}
Select a query that can be executed without errors.
Answer:- db.developers.updateOne({_id:1},{$set:{fname:'John'}})
Explanation:-
db.collection.updateOne(filter, update, options) updates a single document within the collection based on the filter.
You cannot update the _id field, so only db.developers.updateOne( { _id: 1 }, { $set: { fname: 'John' } } ) is ok.


6. In your database there is a collection named trips with the following document structure:
{
  '_id': ObjectId("572bb8222b288919b68abf6d"),
  'trip_duration': 858,
  'start_station id': 532,
  'end_station_id': 401,
  'bike_id': 17057,
  'start_station_location': { type: 'Point', coordinates: [ -73.960876, 40.710451 ] },
  'end_station_location': { type: 'Point', coordinates: [ -73.98997825, 40.72019576 ] },
  'start_time': ISODate("2016-01-01T00:09:31.000Z"),
  'stop_time': ISODate("2016-01-01T00:23:49.000Z")
}
How can you extract all trips from this collection ended at stations that are to the west of the -73.5 longitude coordinate?

Answer:- db.trips.find({'end_station_location.coordinates.0':{$lt:-73.5}})
Explanation:-
$lt selects the documents where the value of the field is less than (i.e. <) the specified value.
Syntax: { field: { $lt: value } }


7. Given a companies collection where each document has the following structure:
{
    _id: ObjectId('61a8b90c6d5ce6a7d8fef95e'),
    name: 'Facebook',
    tag_list: ['facebook', 'college', 'students', 'network'],
    description: 'Social network'
}
Which of the following commands will add new fields to the updated documents?

Answer:- db.companies.updateMany({"name":"Facebook"},{"$set":{"country":"USA"}})
      :- db.companies.updateMany({"name":"Facebook"},{"$set":{"sector":"IT"}})


What is Aggregation in MongoDB? 
Answer:- Aggregation is a way of processing a large number of documents in a collection by means of passing them through different stages. The stages make up what is known as a pipeline. The stages in a pipeline can filter, sort, group, reshape and modify documents that pass through the pipeline



----------------------------------------------------------------------
:- Mongod is basically a daemon process for the MongoDB system.It generally handles data requests,manages data access,and performs background management operations.


1. what is the difference between mongod and mongo files?
:- Mongod and mongo both are executable files.
:- Mongod basically helps you to run the server, whereas mongo actually runs the shell where you can type the commands.


2. How will you change the database path?
:- To change the database path you can use the mongod utility with "--dbpath".
eg:- mongod --dbpath D:\Mongo\data\db


:- According to mngodb documentation or rules- the database will only be listed if it has at least one collection.

:- The commands in mongodb are case sensitive,unlike MySQL-which is case insensitive.

:- The data stored in MongoDB is in BSON format.

:- BSON stands for Binary JSON.BSON is a superset of JSON which includes more advanced data types that are not present in JSON.

:- MongoDB comes with two different types of documents :-
1. Relational document
2. Embedded document

:- Relational documents work the same way -where you will have different documents for parent,child and a reference of parent will be stored in the child document.

:- Embedded documents is one where you have parent and child values in the same document.